{"ast":null,"code":"import moment from 'moment';\nexport default {\n  props: {\n    dialog: Boolean,\n    dialogTitle: String,\n    ordersList: Array\n  },\n  data() {\n    return {\n      internalDialog: this.dialog,\n      editedIndex: -1,\n      menu2: false,\n      statusOptions: ['init', 'error', 'upload_docs', 'process', 'reupload_fls'],\n      editedItemCopy: {\n        num: 0,\n        stg: [],\n        dadd: moment().format('YYYY-MM-DD HH:mm'),\n        client_name: \"\",\n        state: \"init\",\n        person_phone: \"\"\n      },\n      defaultItem: {\n        num: 0,\n        stg: [],\n        dadd: moment().format('YYYY-MM-DD HH:mm'),\n        client_name: \"\",\n        state: \"init\",\n        person_phone: \"\"\n      },\n      rules: {\n        counter: value => value.length <= 8 || 'Максимум 8 символов',\n        numIfNonEmpty: value => {\n          const pattern = /^[0-9]+$/;\n          return value === '' || pattern.test(value) || 'Недопустимый номер заявки. Используйте только цифры';\n        },\n        max20Characters: value => value.length <= 20 || 'Максимум 20 символов',\n        stgCheck: value => {\n          const pattern = /^[a-zA-Zа-яА-Я.'\"0-9\\s]+$/;\n          return value === '' || pattern.test(value) || 'Используйте цифры (0-9) или буквы (a-z, A-Z, а-я, А-Я). Максимум 20 символов.';\n        },\n        client_nameCheck: value => {\n          const pattern = /^[a-zA-Zа-яА-Я\\s.'\"0-9]+$/;\n          return value === '' || value.length <= 30 && pattern.test(value) || 'Используйте цифры (0-9) или буквы (a-z, A-Z, а-я, А-Я). Максимум 30 символов.';\n        },\n        personPhoneCheck: value => {\n          const pattern = /^[0-9]+$/;\n          return value === '' || value.length === 11 && pattern.test(value) || 'Недопустимый номер телефона. Должен содержать ровно 11 цифр.';\n        }\n      }\n    };\n  },\n  methods: {\n    closeDialog() {\n      this.internalDialog = false;\n      this.$emit('update:dialog', this.internalDialog);\n      this.$emit('update:editedIndex', -1);\n      this.$emit('update:editedItem', {\n        ...this.defaultItem\n      });\n    },\n    saveItem() {\n      const editedItemCopy = JSON.parse(JSON.stringify(this.editedItemCopy));\n      this.$nextTick(() => {\n        if (this.$refs.form && typeof this.$refs.form.validate === 'function') {\n          if (this.$refs.form.validate()) {\n            if (!moment(editedItemCopy.dadd).isValid()) {\n              editedItemCopy.dadd = moment().format('YYYY-MM-DD HH:mm');\n            } else {\n              editedItemCopy.dadd = moment(editedItemCopy.dadd).format('YYYY-MM-DD HH:mm');\n            }\n            if (this.editedIndex > -1) {\n              this.$emit('update-order', {\n                index: this.editedIndex,\n                order: editedItemCopy\n              });\n            } else {\n              this.$emit('add-order', editedItemCopy);\n            }\n            this.closeDialog();\n          }\n        } else {\n          console.error('Ошибка: объект this.$refs.form не определен или метод validate не существует.');\n        }\n      });\n    },\n    editItem(item, index) {\n      this.editedIndex = index;\n      this.editedItemCopy = Object.assign({}, item);\n      this.dialogTitle = \"Редактировать заявку\";\n      this.internalDialog = true;\n    },\n    addItem() {\n      this.editedIndex = -1;\n      this.editedItemCopy = Object.assign({}, this.defaultItem);\n      this.dialogTitle = \"Создать заявку\";\n      this.internalDialog = true;\n    }\n  },\n  watch: {\n    dialog(newVal) {\n      this.internalDialog = newVal;\n    }\n  }\n};","map":{"version":3,"names":["moment","props","dialog","Boolean","dialogTitle","String","ordersList","Array","data","internalDialog","editedIndex","menu2","statusOptions","editedItemCopy","num","stg","dadd","format","client_name","state","person_phone","defaultItem","rules","counter","value","length","numIfNonEmpty","pattern","test","max20Characters","stgCheck","client_nameCheck","personPhoneCheck","methods","closeDialog","$emit","saveItem","JSON","parse","stringify","$nextTick","$refs","form","validate","isValid","index","order","console","error","editItem","item","Object","assign","addItem","watch","newVal"],"sources":["src/components/DialogEdit.vue"],"sourcesContent":["<template>\n    <v-dialog v-if=\"dialog\" v-model=\"internalDialog\" max-width=\"600px\">\n      <v-card>\n        <v-card-title>{{ dialogTitle }}</v-card-title>\n        <v-card-text>\n          <v-form ref=\"form\">\n            <v-text-field v-model=\"editedItemCopy.num\" :rules=\"[rules.counter, rules.numIfNonEmpty]\"\n              label=\"№ Заявки\" required></v-text-field>\n            <v-text-field v-model=\"editedItemCopy.stg\" :rules=\"[rules.stgCheck, rules.max20Characters]\"\n              label=\"Продукт\" required></v-text-field>\n            <v-row>\n              <v-col cols=\"12\" sm=\"6\" md=\"4\">\n                <v-menu v-model=\"menu2\" :close-on-content-click=\"false\" :nudge-right=\"40\"\n                  transition=\"scale-transition\" offset-y min-width=\"auto\">\n                  <template v-slot:activator=\"{ on, attrs }\">\n                    <v-text-field v-model=\"editedItemCopy.dadd\" label=\"Дата\" prepend-icon=\"mdi-calendar\"\n                      readonly v-bind=\"attrs\" v-on=\"on\"></v-text-field>\n                  </template>\n                  <v-date-picker v-model=\"editedItemCopy.dadd\" @input=\"menu2 = false\"></v-date-picker>\n                </v-menu>\n              </v-col>\n            </v-row>\n            <v-text-field v-model=\"editedItemCopy.client_name\" :rules=\"[rules.client_nameCheck]\" label=\"Клиент\"\n              required></v-text-field>\n            <v-row>\n              <v-col class=\"d-flex\" cols=\"12\" sm=\"6\">\n                <v-select v-model=\"editedItemCopy.state\" :items=\"statusOptions\" label=\"Статус\"></v-select>\n              </v-col>\n            </v-row>\n            <v-text-field v-model=\"editedItemCopy.person_phone\" :rules=\"[rules.personPhoneCheck]\"\n              label=\"Телефон\" required></v-text-field>\n          </v-form>\n        </v-card-text>\n        <v-card-actions>\n          <v-spacer></v-spacer>\n          <v-btn color=\"blue darken-1\" text @click=\"closeDialog\">Отмена</v-btn>\n          <v-btn color=\"blue darken-1\" text @click=\"saveItem\">Сохранить</v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n  </template>\n  \n  <script>\n  import moment from 'moment';\n  \n  export default {\n    props: {\n      dialog: Boolean,\n      dialogTitle: String,\n      ordersList: Array,\n    },\n    data() {\n      return {\n        internalDialog: this.dialog,\n        editedIndex: -1,\n        menu2: false,\n        statusOptions: [\n          'init',\n          'error',\n          'upload_docs',\n          'process',\n          'reupload_fls'\n        ],\n        editedItemCopy: {\n          num: 0,\n          stg: [],\n          dadd: moment().format('YYYY-MM-DD HH:mm'),\n          client_name: \"\",\n          state: \"init\",\n          person_phone: \"\"\n        },\n        defaultItem: {\n          num: 0,\n          stg: [],\n          dadd: moment().format('YYYY-MM-DD HH:mm'),\n          client_name: \"\",\n          state: \"init\",\n          person_phone: \"\"\n        },\n        rules: {\n          counter: value => value.length <= 8 || 'Максимум 8 символов',\n          numIfNonEmpty: value => {\n            const pattern = /^[0-9]+$/;\n            return value === '' || pattern.test(value) || 'Недопустимый номер заявки. Используйте только цифры';\n          },\n          max20Characters: value => value.length <= 20 || 'Максимум 20 символов',\n          stgCheck: value => {\n            const pattern = /^[a-zA-Zа-яА-Я.'\"0-9\\s]+$/;\n            return value === '' || pattern.test(value) || 'Используйте цифры (0-9) или буквы (a-z, A-Z, а-я, А-Я). Максимум 20 символов.';\n          },\n          client_nameCheck: value => {\n            const pattern = /^[a-zA-Zа-яА-Я\\s.'\"0-9]+$/;\n            return value === '' || (value.length <= 30 && pattern.test(value)) || 'Используйте цифры (0-9) или буквы (a-z, A-Z, а-я, А-Я). Максимум 30 символов.';\n          },\n          personPhoneCheck: value => {\n            const pattern = /^[0-9]+$/;\n            return value === '' || (value.length === 11 && pattern.test(value)) || 'Недопустимый номер телефона. Должен содержать ровно 11 цифр.';\n          }\n        }\n      };\n    },\n    methods: {\n      closeDialog() {\n        this.internalDialog = false;\n        this.$emit('update:dialog', this.internalDialog);\n        this.$emit('update:editedIndex', -1);\n        this.$emit('update:editedItem', { ...this.defaultItem });\n      },\n      saveItem() {\n        const editedItemCopy = JSON.parse(JSON.stringify(this.editedItemCopy));\n        this.$nextTick(() => {\n          if (this.$refs.form && typeof this.$refs.form.validate === 'function') {\n            if (this.$refs.form.validate()) {\n              if (!moment(editedItemCopy.dadd).isValid()) {\n                editedItemCopy.dadd = moment().format('YYYY-MM-DD HH:mm');\n              } else {\n                editedItemCopy.dadd = moment(editedItemCopy.dadd).format('YYYY-MM-DD HH:mm');\n              }\n              if (this.editedIndex > -1) {\n                this.$emit('update-order', { index: this.editedIndex, order: editedItemCopy });\n              } else {\n                this.$emit('add-order', editedItemCopy);\n              }\n              this.closeDialog();\n            }\n          } else {\n            console.error('Ошибка: объект this.$refs.form не определен или метод validate не существует.');\n          }\n        });\n      },\n      editItem(item, index) {\n        this.editedIndex = index;\n        this.editedItemCopy = Object.assign({}, item);\n        this.dialogTitle = \"Редактировать заявку\";\n        this.internalDialog = true;\n      },\n      addItem() {\n        this.editedIndex = -1;\n        this.editedItemCopy = Object.assign({}, this.defaultItem);\n        this.dialogTitle = \"Создать заявку\";\n        this.internalDialog = true;\n      }\n    },\n    watch: {\n      dialog(newVal) {\n        this.internalDialog = newVal;\n      }\n    }\n  };\n  </script>\n  "],"mappings":"AA2CA,OAAAA,MAAA;AAEA;EACAC,KAAA;IACAC,MAAA,EAAAC,OAAA;IACAC,WAAA,EAAAC,MAAA;IACAC,UAAA,EAAAC;EACA;EACAC,KAAA;IACA;MACAC,cAAA,OAAAP,MAAA;MACAQ,WAAA;MACAC,KAAA;MACAC,aAAA,GACA,QACA,SACA,eACA,WACA,eACA;MACAC,cAAA;QACAC,GAAA;QACAC,GAAA;QACAC,IAAA,EAAAhB,MAAA,GAAAiB,MAAA;QACAC,WAAA;QACAC,KAAA;QACAC,YAAA;MACA;MACAC,WAAA;QACAP,GAAA;QACAC,GAAA;QACAC,IAAA,EAAAhB,MAAA,GAAAiB,MAAA;QACAC,WAAA;QACAC,KAAA;QACAC,YAAA;MACA;MACAE,KAAA;QACAC,OAAA,EAAAC,KAAA,IAAAA,KAAA,CAAAC,MAAA;QACAC,aAAA,EAAAF,KAAA;UACA,MAAAG,OAAA;UACA,OAAAH,KAAA,WAAAG,OAAA,CAAAC,IAAA,CAAAJ,KAAA;QACA;QACAK,eAAA,EAAAL,KAAA,IAAAA,KAAA,CAAAC,MAAA;QACAK,QAAA,EAAAN,KAAA;UACA,MAAAG,OAAA;UACA,OAAAH,KAAA,WAAAG,OAAA,CAAAC,IAAA,CAAAJ,KAAA;QACA;QACAO,gBAAA,EAAAP,KAAA;UACA,MAAAG,OAAA;UACA,OAAAH,KAAA,WAAAA,KAAA,CAAAC,MAAA,UAAAE,OAAA,CAAAC,IAAA,CAAAJ,KAAA;QACA;QACAQ,gBAAA,EAAAR,KAAA;UACA,MAAAG,OAAA;UACA,OAAAH,KAAA,WAAAA,KAAA,CAAAC,MAAA,WAAAE,OAAA,CAAAC,IAAA,CAAAJ,KAAA;QACA;MACA;IACA;EACA;EACAS,OAAA;IACAC,YAAA;MACA,KAAAzB,cAAA;MACA,KAAA0B,KAAA,uBAAA1B,cAAA;MACA,KAAA0B,KAAA;MACA,KAAAA,KAAA;QAAA,QAAAd;MAAA;IACA;IACAe,SAAA;MACA,MAAAvB,cAAA,GAAAwB,IAAA,CAAAC,KAAA,CAAAD,IAAA,CAAAE,SAAA,MAAA1B,cAAA;MACA,KAAA2B,SAAA;QACA,SAAAC,KAAA,CAAAC,IAAA,gBAAAD,KAAA,CAAAC,IAAA,CAAAC,QAAA;UACA,SAAAF,KAAA,CAAAC,IAAA,CAAAC,QAAA;YACA,KAAA3C,MAAA,CAAAa,cAAA,CAAAG,IAAA,EAAA4B,OAAA;cACA/B,cAAA,CAAAG,IAAA,GAAAhB,MAAA,GAAAiB,MAAA;YACA;cACAJ,cAAA,CAAAG,IAAA,GAAAhB,MAAA,CAAAa,cAAA,CAAAG,IAAA,EAAAC,MAAA;YACA;YACA,SAAAP,WAAA;cACA,KAAAyB,KAAA;gBAAAU,KAAA,OAAAnC,WAAA;gBAAAoC,KAAA,EAAAjC;cAAA;YACA;cACA,KAAAsB,KAAA,cAAAtB,cAAA;YACA;YACA,KAAAqB,WAAA;UACA;QACA;UACAa,OAAA,CAAAC,KAAA;QACA;MACA;IACA;IACAC,SAAAC,IAAA,EAAAL,KAAA;MACA,KAAAnC,WAAA,GAAAmC,KAAA;MACA,KAAAhC,cAAA,GAAAsC,MAAA,CAAAC,MAAA,KAAAF,IAAA;MACA,KAAA9C,WAAA;MACA,KAAAK,cAAA;IACA;IACA4C,QAAA;MACA,KAAA3C,WAAA;MACA,KAAAG,cAAA,GAAAsC,MAAA,CAAAC,MAAA,UAAA/B,WAAA;MACA,KAAAjB,WAAA;MACA,KAAAK,cAAA;IACA;EACA;EACA6C,KAAA;IACApD,OAAAqD,MAAA;MACA,KAAA9C,cAAA,GAAA8C,MAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}