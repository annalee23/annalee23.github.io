{"ast":null,"code":"import moment from 'moment';\nexport default {\n  data() {\n    return {\n      dialog: false,\n      dialogTitle: \"Создать заявку\",\n      editedItem: {\n        num: 0,\n        stg: [],\n        dadd: moment().format('YYYY-MM-DD HH:mm'),\n        client_name: \"\",\n        state: \"init\",\n        person_phone: \"\"\n      },\n      rules: {\n        counter: value => value.length <= 8 || 'Максимум 8 символов',\n        numIfNonEmpty: value => {\n          const pattern = /^[0-9]+$/;\n          return value === '' || pattern.test(value) || 'Недопустимый номер заявки. Используйте только цифры';\n        },\n        max20Characters: value => value.length <= 20 || 'Максимум 20 символов',\n        stgCheck: value => {\n          const pattern = /^[a-zA-Zа-яА-Я.'\"0-9\\s]+$/;\n          return value === '' || pattern.test(value) || 'Используйте цифры (0-9) или буквы (a-z, A-Z, а-я, А-Я). Максимум 20 символов.';\n        },\n        client_nameCheck: value => {\n          const pattern = /^[a-zA-Zа-яА-Я\\s.'\"0-9]+$/;\n          return value === '' || value.length <= 30 && pattern.test(value) || 'Используйте цифры (0-9) или буквы (a-z, A-Z, а-я, А-Я). Максимум 30 символов.';\n        },\n        personPhoneCheck: value => {\n          const pattern = /^[0-9]+$/;\n          return value === '' || value.length === 11 && pattern.test(value) || 'Недопустимый номер телефона. Должен содержать ровно 11 цифр.';\n        }\n      }\n    };\n  },\n  methods: {\n    closeDialog() {\n      this.dialog = false;\n      // Сброс формы или другие необходимые действия\n    },\n    saveItem() {\n      // Логика сохранения заявки\n      this.$emit('save', this.editedItem); // Отправляем данные в родительский компонент\n    }\n  }\n};","map":{"version":3,"names":["moment","data","dialog","dialogTitle","editedItem","num","stg","dadd","format","client_name","state","person_phone","rules","counter","value","length","numIfNonEmpty","pattern","test","max20Characters","stgCheck","client_nameCheck","personPhoneCheck","methods","closeDialog","saveItem","$emit"],"sources":["src/components/DialogEdit.vue"],"sourcesContent":["<template>\n    <v-dialog v-model=\"dialog\" max-width=\"600px\">\n      <v-card>\n        <v-card-title>{{ dialogTitle }}</v-card-title>\n        <v-card-text>\n          <v-form ref=\"form\">\n            <v-text-field v-model=\"editedItem.num\" :rules=\"[rules.counter, rules.numIfNonEmpty]\"\n              label=\"№ Заявки\" required></v-text-field>\n            <v-text-field v-model=\"editedItem.stg\" :rules=\"[rules.stgCheck, rules.max20Characters]\" \n              label=\"Продукт\" required></v-text-field>\n            <v-row>\n              <v-col cols=\"12\" sm=\"6\" md=\"4\">\n                <v-menu v-model=\"menu2\" :close-on-content-click=\"false\" :nudge-right=\"40\" transition=\"scale-transition\"\n                  offset-y min-width=\"auto\">\n                  <template v-slot:activator=\"{ on, attrs }\">\n                    <v-text-field v-model=\"editedItem.dadd\" label=\"Дата\" prepend-icon=\"mdi-calendar\" readonly\n                      v-bind=\"attrs\" v-on=\"on\"></v-text-field>\n                  </template>\n                  <v-date-picker v-model=\"editedItem.dadd\" @input=\"menu2 = false\"></v-date-picker>\n                </v-menu>\n              </v-col>\n            </v-row>\n            <v-text-field v-model=\"editedItem.client_name\" :rules=\"[rules.client_nameCheck]\" \n               label=\"Клиент\" required></v-text-field>\n            <v-row>\n              <v-col class=\"d-flex\" cols=\"12\" sm=\"6\">\n                <v-select v-model=\"editedItem.state\" :items=\"statusOptions\" label=\"Статус\"></v-select>\n              </v-col>\n            </v-row>\n            <v-text-field v-model=\"editedItem.person_phone\" :rules=\"[rules.personPhoneCheck]\" \n              label=\"Телефон\" required></v-text-field>          </v-form>\n        </v-card-text>\n        <v-card-actions>\n          <v-spacer></v-spacer>\n          <v-btn color=\"blue darken-1\" text @click=\"closeDialog\">Отмена</v-btn>\n          <v-btn color=\"blue darken-1\" text @click=\"saveItem\">Сохранить</v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n  </template>\n\n\n<script>\nimport moment from 'moment';\n\nexport default {\n    data() {\n        return {\n            dialog: false,\n            dialogTitle: \"Создать заявку\",\n            editedItem: {\n                num: 0,\n                stg: [],\n                dadd: moment().format('YYYY-MM-DD HH:mm'),\n                client_name: \"\",\n                state: \"init\",\n                person_phone: \"\"\n            },\n            rules: {\n                counter: value => value.length <= 8 || 'Максимум 8 символов',\n                numIfNonEmpty: value => {\n                    const pattern = /^[0-9]+$/;\n                    return value === '' || pattern.test(value) || 'Недопустимый номер заявки. Используйте только цифры';\n                },\n                max20Characters: value => value.length <= 20 || 'Максимум 20 символов',\n                stgCheck: value => {\n                    const pattern = /^[a-zA-Zа-яА-Я.'\"0-9\\s]+$/;\n                    return value === '' || pattern.test(value) || 'Используйте цифры (0-9) или буквы (a-z, A-Z, а-я, А-Я). Максимум 20 символов.';\n                },\n                client_nameCheck: value => {\n                    const pattern = /^[a-zA-Zа-яА-Я\\s.'\"0-9]+$/;\n                    return value === '' || (value.length <= 30 && pattern.test(value)) || 'Используйте цифры (0-9) или буквы (a-z, A-Z, а-я, А-Я). Максимум 30 символов.';\n                },\n                personPhoneCheck: value => {\n                    const pattern = /^[0-9]+$/;\n                    return value === '' || (value.length === 11 && pattern.test(value)) || 'Недопустимый номер телефона. Должен содержать ровно 11 цифр.';\n                }\n            },\n        };\n    },\n    methods: {\n        closeDialog() {\n            this.dialog = false;\n            // Сброс формы или другие необходимые действия\n        },\n        saveItem() {\n            // Логика сохранения заявки\n            this.$emit('save', this.editedItem); // Отправляем данные в родительский компонент\n        }\n    }\n};\n</script>\n"],"mappings":"AA2CA,OAAAA,MAAA;AAEA;EACAC,KAAA;IACA;MACAC,MAAA;MACAC,WAAA;MACAC,UAAA;QACAC,GAAA;QACAC,GAAA;QACAC,IAAA,EAAAP,MAAA,GAAAQ,MAAA;QACAC,WAAA;QACAC,KAAA;QACAC,YAAA;MACA;MACAC,KAAA;QACAC,OAAA,EAAAC,KAAA,IAAAA,KAAA,CAAAC,MAAA;QACAC,aAAA,EAAAF,KAAA;UACA,MAAAG,OAAA;UACA,OAAAH,KAAA,WAAAG,OAAA,CAAAC,IAAA,CAAAJ,KAAA;QACA;QACAK,eAAA,EAAAL,KAAA,IAAAA,KAAA,CAAAC,MAAA;QACAK,QAAA,EAAAN,KAAA;UACA,MAAAG,OAAA;UACA,OAAAH,KAAA,WAAAG,OAAA,CAAAC,IAAA,CAAAJ,KAAA;QACA;QACAO,gBAAA,EAAAP,KAAA;UACA,MAAAG,OAAA;UACA,OAAAH,KAAA,WAAAA,KAAA,CAAAC,MAAA,UAAAE,OAAA,CAAAC,IAAA,CAAAJ,KAAA;QACA;QACAQ,gBAAA,EAAAR,KAAA;UACA,MAAAG,OAAA;UACA,OAAAH,KAAA,WAAAA,KAAA,CAAAC,MAAA,WAAAE,OAAA,CAAAC,IAAA,CAAAJ,KAAA;QACA;MACA;IACA;EACA;EACAS,OAAA;IACAC,YAAA;MACA,KAAAtB,MAAA;MACA;IACA;IACAuB,SAAA;MACA;MACA,KAAAC,KAAA,cAAAtB,UAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}