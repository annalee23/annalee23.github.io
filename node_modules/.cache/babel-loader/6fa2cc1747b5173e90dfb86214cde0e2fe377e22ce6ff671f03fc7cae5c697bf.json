{"ast":null,"code":"import { mapMutations, mapState } from 'vuex';\nimport moment from 'moment';\nimport DialogDelete from './DialogDelete.vue';\nimport BtnEditDelete from './BtnEditDelete.vue';\nimport DialogEditCreate from './DialogEditCreate.vue';\nexport default {\n  components: {\n    DialogDelete,\n    BtnEditDelete,\n    DialogEditCreate\n  },\n  data: () => ({\n    menu2: false,\n    dialog: false,\n    dialogDelete: false,\n    dialogTitle: \"Создать заявку\",\n    headers: [{\n      text: '№ Заявки',\n      value: 'num'\n    }, {\n      text: 'Продукт',\n      value: 'stg'\n    }, {\n      text: 'Дата',\n      value: 'dadd'\n    }, {\n      text: 'Клиент',\n      value: 'client_name'\n    }, {\n      text: 'Статус',\n      value: 'state'\n    }, {\n      text: 'Телефон',\n      value: 'person_phone'\n    }, {\n      text: 'Действия',\n      value: 'actions',\n      sortable: false\n    }],\n    editedIndex: -1,\n    editedItem: {\n      num: 0,\n      stg: [],\n      dadd: moment().format('YYYY-MM-DD HH:mm'),\n      client_name: \"\",\n      state: \"init\",\n      person_phone: \"\"\n    },\n    defaultItem: {\n      num: 0,\n      stg: [],\n      dadd: moment().format('YYYY-MM-DD HH:mm'),\n      client_name: \"\",\n      state: \"init\",\n      person_phone: \"\"\n    },\n    dialogMode: 'create',\n    // 'create', 'edit', 'delete'\n    nextId: 6\n  }),\n  watch: {\n    dialog(val) {\n      if (!val) this.closeDialog();\n    },\n    dialogDelete(val) {\n      if (!val) this.closeDialog();\n    }\n  },\n  computed: {\n    ...mapState(['ordersList']),\n    isNewOrder() {\n      return this.dialogMode === 'create';\n    }\n  },\n  methods: {\n    ...mapMutations(['addNewItem']),\n    formatDate(date) {\n      return moment(date).isValid() ? moment(date).format('DD.MM.YYYY HH:mm') : 'Invalid date';\n    },\n    statusClass(status) {\n      return {\n        'status-init': status === 'init',\n        'status-error': status === 'error',\n        'status-upload_docs': status === 'upload_docs',\n        'status-process': status === 'process',\n        'status-reupload_fls': status === 'reupload_fls'\n      };\n    },\n    selectOrder(orderId, num) {\n      this.$emit('select-order', {\n        orderId,\n        num\n      });\n    },\n    openDialog(item = null, mode = 'create') {\n      this.dialogMode = mode;\n      this.dialogTitle = mode === 'create' ? \"Создать заявку\" : \"Редактировать заявку\";\n      if (mode === 'create') {\n        this.editedItem = Object.assign({}, this.defaultItem);\n        this.editedItem.num = this.nextId++;\n        this.editedIndex = -1;\n      } else {\n        this.editedIndex = this.ordersList.indexOf(item);\n        this.editedItem = Object.assign({}, item);\n      }\n      if (mode === 'delete') {\n        this.dialogDelete = true;\n      } else {\n        this.dialog = true;\n      }\n    },\n    closeDialog() {\n      this.dialog = false;\n      this.dialogDelete = false;\n      this.$nextTick(() => {\n        this.editedItem = Object.assign({}, this.defaultItem);\n        this.editedIndex = -1;\n        this.dialogMode = 'create';\n      });\n    },\n    saveItem(localEditedItem) {\n      if (this.editedIndex > -1) {\n        Object.assign(this.ordersList[this.editedIndex], localEditedItem);\n      } else {\n        this.addNewItem(localEditedItem);\n      }\n      this.closeDialog();\n    },\n    editItem(item) {\n      this.openDialog(item, 'edit');\n    },\n    deleteItem() {\n      if (this.editedIndex > -1) {\n        this.ordersList.splice(this.editedIndex, 1);\n      }\n      this.closeDialog();\n    }\n  },\n  mounted() {\n    this.$store.dispatch('fetchOrdersList');\n  }\n};","map":{"version":3,"names":["mapMutations","mapState","moment","DialogDelete","BtnEditDelete","DialogEditCreate","components","data","menu2","dialog","dialogDelete","dialogTitle","headers","text","value","sortable","editedIndex","editedItem","num","stg","dadd","format","client_name","state","person_phone","defaultItem","dialogMode","nextId","watch","val","closeDialog","computed","isNewOrder","methods","formatDate","date","isValid","statusClass","status","selectOrder","orderId","$emit","openDialog","item","mode","Object","assign","ordersList","indexOf","$nextTick","saveItem","localEditedItem","addNewItem","editItem","deleteItem","splice","mounted","$store","dispatch"],"sources":["src/components/MyApplications.vue"],"sourcesContent":["<template>\n  <div class=\"mx-1\">\n    <v-data-table :headers=\"headers\" :items=\"ordersList\" class=\"elevation-1\">\n      <template v-slot:top>\n        <v-toolbar flat>\n          <h2>Список заявок</h2>\n          <v-spacer></v-spacer>\n          <v-btn class=\"my-4\" color=\"primary\" @click=\"openDialog()\">Добавить заявку</v-btn>\n          <DialogDelete :dialog=\"dialogDelete\" @close=\"closeDialog\" @confirm=\"deleteItem\" />\n        </v-toolbar>\n      </template>\n\n      <template #[`item.stg`]=\"{ item }\">\n        <span>{{ Array.isArray(item.stg) ? item.stg.join(', ') : item.stg }}</span>\n      </template>\n      <template #[`item.dadd`]=\"{ item }\">\n        <span>{{ formatDate(item.dadd) }}</span>\n      </template>\n      <template #[`item.state`]=\"{ item }\">\n        <span :class=\"statusClass(item.state)\">{{ item.state }}</span>\n      </template>\n      <template #[`item.num`]=\"{ item }\">\n        <div @click=\"selectOrder(item.id, item.num)\" style=\"cursor: pointer;\">\n          {{ item.num }}\n        </div>\n      </template>\n\n      <template #[`item.actions`]=\"{ item }\">\n        <BtnEditDelete :item=\"item\" @edit=\"editItem\" @delete=\"openDialog(item, 'delete')\" />\n      </template>\n    </v-data-table>\n\n    <DialogEditCreate :dialog.sync=\"dialog\" :editedItem=\"editedItem\" :dialogTitle=\"dialogTitle\" @save=\"saveItem\"\n      @close=\"closeDialog\" />\n  </div>\n</template>\n\n<script>\nimport { mapMutations, mapState } from 'vuex';\nimport moment from 'moment';\nimport DialogDelete from './DialogDelete.vue';\nimport BtnEditDelete from './BtnEditDelete.vue';\nimport DialogEditCreate from './DialogEditCreate.vue';\n\nexport default {\n  components: {\n    DialogDelete,\n    BtnEditDelete,\n    DialogEditCreate,\n  },\n  data: () => ({\n    menu2: false,\n    dialog: false,\n    dialogDelete: false,\n    dialogTitle: \"Создать заявку\",\n    headers: [\n      { text: '№ Заявки', value: 'num' },\n      { text: 'Продукт', value: 'stg' },\n      { text: 'Дата', value: 'dadd' },\n      { text: 'Клиент', value: 'client_name' },\n      { text: 'Статус', value: 'state' },\n      { text: 'Телефон', value: 'person_phone' },\n      { text: 'Действия', value: 'actions', sortable: false }\n    ],\n    editedIndex: -1,\n    editedItem: {\n      num: 0,\n      stg: [],\n      dadd: moment().format('YYYY-MM-DD HH:mm'),\n      client_name: \"\",\n      state: \"init\",\n      person_phone: \"\"\n    },\n    defaultItem: {\n      num: 0,\n      stg: [],\n      dadd: moment().format('YYYY-MM-DD HH:mm'),\n      client_name: \"\",\n      state: \"init\",\n      person_phone: \"\"\n    },\n    dialogMode: 'create', // 'create', 'edit', 'delete'\n    nextId: 6, \n  }),\n  watch: {\n    dialog(val) {\n      if (!val) this.closeDialog();\n    },\n    dialogDelete(val) {\n      if (!val) this.closeDialog();\n    },\n  },\n  computed: {\n    ...mapState(['ordersList']),\n    isNewOrder() {\n      return this.dialogMode === 'create';\n    }\n  },\n  methods: {\n    ...mapMutations(['addNewItem']),\n    formatDate(date) {\n      return moment(date).isValid() ? moment(date).format('DD.MM.YYYY HH:mm') : 'Invalid date';\n    },\n    statusClass(status) {\n      return {\n        'status-init': status === 'init',\n        'status-error': status === 'error',\n        'status-upload_docs': status === 'upload_docs',\n        'status-process': status === 'process',\n        'status-reupload_fls': status === 'reupload_fls',\n      };\n    },\n    selectOrder(orderId, num) {\n      this.$emit('select-order', { orderId, num });\n    },\n\n    openDialog(item = null, mode = 'create') {\n      this.dialogMode = mode;\n      this.dialogTitle = mode === 'create' ? \"Создать заявку\" : \"Редактировать заявку\";\n\n      if (mode === 'create') {\n        this.editedItem = Object.assign({}, this.defaultItem);\n        this.editedItem.num = this.nextId++; \n        this.editedIndex = -1;\n      } else {\n        this.editedIndex = this.ordersList.indexOf(item);\n        this.editedItem = Object.assign({}, item);\n      }\n\n      if (mode === 'delete') {\n        this.dialogDelete = true;\n      } else {\n        this.dialog = true;\n      }\n    },\n\n    closeDialog() {\n      this.dialog = false;\n      this.dialogDelete = false;\n      this.$nextTick(() => {\n        this.editedItem = Object.assign({}, this.defaultItem);\n        this.editedIndex = -1;\n        this.dialogMode = 'create';\n      });\n    },\n\n    saveItem(localEditedItem) {\n      if (this.editedIndex > -1) {\n        Object.assign(this.ordersList[this.editedIndex], localEditedItem);\n      } else {\n        this.addNewItem(localEditedItem);\n      }\n      this.closeDialog();\n    },\n\n    editItem(item) {\n      this.openDialog(item, 'edit');\n    },\n\n    deleteItem() {\n      if (this.editedIndex > -1) {\n        this.ordersList.splice(this.editedIndex, 1);\n      }\n      this.closeDialog();\n    },\n  },\n  mounted() {\n    this.$store.dispatch('fetchOrdersList');\n  }\n};\n</script>\n\n<style scoped>\nh2 {\n  margin-bottom: 20px;\n  text-align: center;\n}\n\n.v-data-footer {\n  display: flex;\n  justify-content: flex-end;\n}\n\n.v-data-footer__pagination,\n.v-data-footer__select {\n  margin-left: auto;\n}\n\n.status-init {\n  color: #ff6f00;\n  /* Ярко-оранжевый */\n  font-weight: bold;\n  padding: 5px;\n}\n\n.status-error {\n  color: #d32f2f;\n  /* Ярко-красный */\n  font-weight: bold;\n  padding: 5px;\n}\n\n.status-upload_docs {\n  color: #0288d1;\n  /* Ярко-голубой */\n  font-weight: bold;\n  padding: 5px;\n}\n\n.status-process {\n  color: #388e3c;\n  /* Ярко-зеленый */\n  font-weight: bold;\n  padding: 5px;\n}\n\n.status-reupload_fls {\n  color: #7b1fa2;\n  /* Ярко-фиолетовый */\n  font-weight: bold;\n  padding: 5px;\n}\n\ntr:hover {\n  background-color: #f5f5f5;\n  /* Светло-серый */\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}