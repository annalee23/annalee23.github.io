{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport MyApplications from '@/components/MyApplications.vue';\nimport MyAccounts from '@/components/MyAccounts.vue';\nimport OrderDetails from '@/components/OrderDetails.vue';\nexport default {\n  data() {\n    return {\n      activeTab: 0,\n      tabs: [{\n        label: 'Заявки',\n        component: MyApplications,\n        path: '/application'\n      }, {\n        label: 'Счета',\n        component: MyAccounts,\n        path: '/accounts'\n      }]\n    };\n  },\n  created() {\n    this.updateActiveTabBasedOnRoute();\n    this.$root.$on('update-tabs', this.updateTabs); // Слушаем событие обновления табов\n  },\n  destroyed() {\n    this.$root.$off('update-tabs', this.updateTabs); // Отменяем прослушивание события при уничтожении компонента\n  },\n  methods: {\n    navigateToOrder(item) {\n      const existingTabIndex = this.tabs.findIndex(tab => tab.label.includes(item.num));\n      if (existingTabIndex !== -1) {\n        this.activeTab = existingTabIndex;\n      } else {\n        this.tabs.push({\n          label: 'Заявка ' + item.num,\n          component: OrderDetails,\n          path: '/application/' + item.orderId\n        });\n        this.activeTab = this.tabs.length - 1;\n        this.$router.push({\n          path: this.tabs[this.activeTab].path\n        });\n      }\n    },\n    updateTabs() {\n      const ordersTab = this.tabs.find(tab => tab.label === 'Заявки');\n      if (ordersTab) {\n        ordersTab.data = this.$store.state.ordersList;\n      }\n    },\n    updateActiveTabBasedOnRoute() {\n      const currentPath = this.$route.path;\n      const tabIndex = this.tabs.findIndex(tab => currentPath === tab.path);\n      if (tabIndex !== -1) {\n        this.activeTab = tabIndex;\n      } else {\n        const match = currentPath.match(/^\\/application\\/(\\d+)/);\n        if (match) {\n          const orderId = match[1];\n          const label = 'Заявка ' + num;\n          const existingOrderTabIndex = this.tabs.findIndex(tab => tab.label === label);\n          if (existingOrderTabIndex === -1) {\n            this.tabs.push({\n              label: label,\n              component: OrderDetails,\n              path: currentPath\n            });\n            this.activeTab = this.tabs.length - 1;\n          } else {\n            this.activeTab = existingOrderTabIndex;\n          }\n        }\n      }\n    }\n  },\n  watch: {\n    activeTab(newVal) {\n      const selectedTab = this.tabs[newVal];\n      if (selectedTab && selectedTab.path && this.$route.path !== selectedTab.path) {\n        this.$router.push({\n          path: selectedTab.path\n        });\n      }\n    }\n  },\n  beforeRouteUpdate(to, from, next) {\n    this.updateActiveTabBasedOnRoute();\n    next();\n  }\n};","map":{"version":3,"names":["MyApplications","MyAccounts","OrderDetails","data","activeTab","tabs","label","component","path","created","updateActiveTabBasedOnRoute","$root","$on","updateTabs","destroyed","$off","methods","navigateToOrder","item","existingTabIndex","findIndex","tab","includes","num","push","orderId","length","$router","ordersTab","find","$store","state","ordersList","currentPath","$route","tabIndex","match","existingOrderTabIndex","watch","newVal","selectedTab","beforeRouteUpdate","to","from","next"],"sources":["src/components/AppTabs.vue"],"sourcesContent":["<template>\n  <v-app>\n    <div class=\"mx-16\">\n      <v-tabs v-model=\"activeTab\" background-color=\"transparent\" color=\"basil\" grow>\n        <v-tab v-for=\"tab in tabs\" :key=\"tab.label\">{{ tab.label }}</v-tab>\n      </v-tabs>\n\n      <v-tabs-items v-model=\"activeTab\">\n        <v-tab-item v-for=\"(tab, index) in tabs\" :key=\"index\">\n          <component :is=\"tab.component\" :data=\"tab.data\" @select-order=\"navigateToOrder\" />\n        </v-tab-item>\n      </v-tabs-items>\n    </div>\n  </v-app>\n</template>\n\n<script>\nimport MyApplications from '@/components/MyApplications.vue';\nimport MyAccounts from '@/components/MyAccounts.vue';\nimport OrderDetails from '@/components/OrderDetails.vue';\n\n\nexport default {\n  data() {\n    return {\n      activeTab: 0,\n      tabs: [\n        { label: 'Заявки', component: MyApplications, path: '/application' },\n        { label: 'Счета', component: MyAccounts, path: '/accounts' }\n      ],\n    };\n  },\n  created() {\n    this.updateActiveTabBasedOnRoute();\n    this.$root.$on('update-tabs', this.updateTabs); // Слушаем событие обновления табов\n  },\n  destroyed() {\n    this.$root.$off('update-tabs', this.updateTabs); // Отменяем прослушивание события при уничтожении компонента\n  },\n  methods: {\n    navigateToOrder(item) {\n      const existingTabIndex = this.tabs.findIndex(tab => tab.label.includes(item.num));\n      if (existingTabIndex !== -1) {\n        this.activeTab = existingTabIndex;\n      } else {\n        this.tabs.push({ label: 'Заявка ' + item.num, component: OrderDetails, path: '/application/' + item.orderId });\n        this.activeTab = this.tabs.length - 1;\n        this.$router.push({ path: this.tabs[this.activeTab].path });\n      }\n    },\n    updateTabs() {\n      const ordersTab = this.tabs.find(tab => tab.label === 'Заявки');\n      if (ordersTab) {\n        ordersTab.data = this.$store.state.ordersList;\n      }\n    },\n    updateActiveTabBasedOnRoute() {\n      const currentPath = this.$route.path;\n      const tabIndex = this.tabs.findIndex(tab => currentPath === tab.path);\n      if (tabIndex !== -1) {\n        this.activeTab = tabIndex;\n      } else {\n        const match = currentPath.match(/^\\/application\\/(\\d+)/);\n        if (match) {\n          const orderId = match[1];\n          const label = 'Заявка ' + num;\n          const existingOrderTabIndex = this.tabs.findIndex(tab => tab.label === label);\n          if (existingOrderTabIndex === -1) {\n            this.tabs.push({ label: label, component: OrderDetails, path: currentPath });\n            this.activeTab = this.tabs.length - 1;\n          } else {\n            this.activeTab = existingOrderTabIndex;\n          }\n        }\n      }\n    }\n  },\n  watch: {\n    activeTab(newVal) {\n      const selectedTab = this.tabs[newVal];\n      if (selectedTab && selectedTab.path && this.$route.path !== selectedTab.path) {\n        this.$router.push({ path: selectedTab.path });\n      }\n    }\n  },\n  beforeRouteUpdate(to, from, next) {\n    this.updateActiveTabBasedOnRoute();\n    next();\n  }\n};\n</script>\n"],"mappings":";AAiBA,OAAAA,cAAA;AACA,OAAAC,UAAA;AACA,OAAAC,YAAA;AAGA;EACAC,KAAA;IACA;MACAC,SAAA;MACAC,IAAA,GACA;QAAAC,KAAA;QAAAC,SAAA,EAAAP,cAAA;QAAAQ,IAAA;MAAA,GACA;QAAAF,KAAA;QAAAC,SAAA,EAAAN,UAAA;QAAAO,IAAA;MAAA;IAEA;EACA;EACAC,QAAA;IACA,KAAAC,2BAAA;IACA,KAAAC,KAAA,CAAAC,GAAA,qBAAAC,UAAA;EACA;EACAC,UAAA;IACA,KAAAH,KAAA,CAAAI,IAAA,qBAAAF,UAAA;EACA;EACAG,OAAA;IACAC,gBAAAC,IAAA;MACA,MAAAC,gBAAA,QAAAd,IAAA,CAAAe,SAAA,CAAAC,GAAA,IAAAA,GAAA,CAAAf,KAAA,CAAAgB,QAAA,CAAAJ,IAAA,CAAAK,GAAA;MACA,IAAAJ,gBAAA;QACA,KAAAf,SAAA,GAAAe,gBAAA;MACA;QACA,KAAAd,IAAA,CAAAmB,IAAA;UAAAlB,KAAA,cAAAY,IAAA,CAAAK,GAAA;UAAAhB,SAAA,EAAAL,YAAA;UAAAM,IAAA,oBAAAU,IAAA,CAAAO;QAAA;QACA,KAAArB,SAAA,QAAAC,IAAA,CAAAqB,MAAA;QACA,KAAAC,OAAA,CAAAH,IAAA;UAAAhB,IAAA,OAAAH,IAAA,MAAAD,SAAA,EAAAI;QAAA;MACA;IACA;IACAK,WAAA;MACA,MAAAe,SAAA,QAAAvB,IAAA,CAAAwB,IAAA,CAAAR,GAAA,IAAAA,GAAA,CAAAf,KAAA;MACA,IAAAsB,SAAA;QACAA,SAAA,CAAAzB,IAAA,QAAA2B,MAAA,CAAAC,KAAA,CAAAC,UAAA;MACA;IACA;IACAtB,4BAAA;MACA,MAAAuB,WAAA,QAAAC,MAAA,CAAA1B,IAAA;MACA,MAAA2B,QAAA,QAAA9B,IAAA,CAAAe,SAAA,CAAAC,GAAA,IAAAY,WAAA,KAAAZ,GAAA,CAAAb,IAAA;MACA,IAAA2B,QAAA;QACA,KAAA/B,SAAA,GAAA+B,QAAA;MACA;QACA,MAAAC,KAAA,GAAAH,WAAA,CAAAG,KAAA;QACA,IAAAA,KAAA;UACA,MAAAX,OAAA,GAAAW,KAAA;UACA,MAAA9B,KAAA,eAAAiB,GAAA;UACA,MAAAc,qBAAA,QAAAhC,IAAA,CAAAe,SAAA,CAAAC,GAAA,IAAAA,GAAA,CAAAf,KAAA,KAAAA,KAAA;UACA,IAAA+B,qBAAA;YACA,KAAAhC,IAAA,CAAAmB,IAAA;cAAAlB,KAAA,EAAAA,KAAA;cAAAC,SAAA,EAAAL,YAAA;cAAAM,IAAA,EAAAyB;YAAA;YACA,KAAA7B,SAAA,QAAAC,IAAA,CAAAqB,MAAA;UACA;YACA,KAAAtB,SAAA,GAAAiC,qBAAA;UACA;QACA;MACA;IACA;EACA;EACAC,KAAA;IACAlC,UAAAmC,MAAA;MACA,MAAAC,WAAA,QAAAnC,IAAA,CAAAkC,MAAA;MACA,IAAAC,WAAA,IAAAA,WAAA,CAAAhC,IAAA,SAAA0B,MAAA,CAAA1B,IAAA,KAAAgC,WAAA,CAAAhC,IAAA;QACA,KAAAmB,OAAA,CAAAH,IAAA;UAAAhB,IAAA,EAAAgC,WAAA,CAAAhC;QAAA;MACA;IACA;EACA;EACAiC,kBAAAC,EAAA,EAAAC,IAAA,EAAAC,IAAA;IACA,KAAAlC,2BAAA;IACAkC,IAAA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}