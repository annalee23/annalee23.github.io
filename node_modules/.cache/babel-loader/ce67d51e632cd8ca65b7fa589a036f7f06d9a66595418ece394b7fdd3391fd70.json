{"ast":null,"code":"import moment from 'moment';\nexport default {\n  props: {\n    dialog: Boolean,\n    dialogTitle: String,\n    editedItem: Object,\n    rules: Object,\n    statusOptions: Array,\n    ordersList: Array,\n    editedIndex: Number\n  },\n  data() {\n    return {\n      internalDialog: this.dialog,\n      editedItemCopy: Object.assign({}, this.editedItem),\n      menu2: false,\n      rules: {\n        counter: value => value.length <= 8 || 'Максимум 8 символов',\n        numIfNonEmpty: value => {\n          const pattern = /^[0-9]+$/;\n          return value === '' || pattern.test(value) || 'Недопустимый номер заявки. Используйте только цифры';\n        },\n        max20Characters: value => value.length <= 20 || 'Максимум 20 символов',\n        stgCheck: value => {\n          const pattern = /^[a-zA-Zа-яА-Я.'\"0-9\\s]+$/;\n          return value === '' || pattern.test(value) || 'Используйте цифры (0-9) или буквы (a-z, A-Z, а-я, А-Я). Максимум 20 символов.';\n        },\n        client_nameCheck: value => {\n          const pattern = /^[a-zA-Zа-яА-Я\\s.'\"0-9]+$/;\n          return value === '' || value.length <= 30 && pattern.test(value) || 'Используйте цифры (0-9) или буквы (a-z, A-Z, а-я, А-Я). Максимум 30 символов.';\n        },\n        personPhoneCheck: value => {\n          const pattern = /^[0-9]+$/;\n          return value === '' || value.length === 11 && pattern.test(value) || 'Недопустимый номер телефона. Должен содержать ровно 11 цифр.';\n        }\n      }\n    };\n  },\n  methods: {\n    closeDialog() {\n      this.internalDialog = false;\n      this.$emit('update:dialog', this.internalDialog);\n    },\n    saveItem() {\n      const editedItemCopy = JSON.parse(JSON.stringify(this.editedItemCopy));\n      this.$nextTick(() => {\n        if (this.$refs.form && typeof this.$refs.form.validate === 'function') {\n          if (this.$refs.form.validate()) {\n            if (!moment(editedItemCopy.dadd).isValid()) {\n              editedItemCopy.dadd = moment().format('YYYY-MM-DD HH:mm');\n            } else {\n              editedItemCopy.dadd = moment(editedItemCopy.dadd).format('YYYY-MM-DD HH:mm');\n            }\n            if (this.editedIndex > -1) {\n              this.$emit('update-order', {\n                index: this.editedIndex,\n                order: editedItemCopy\n              });\n            } else {\n              this.$emit('add-order', editedItemCopy);\n            }\n            this.$emit('save');\n            this.closeDialog();\n          }\n        } else {\n          console.error('Ошибка: объект this.$refs.form не определен или метод validate не существует.');\n        }\n      });\n    }\n  },\n  watch: {\n    editedItem(newVal) {\n      this.editedItemCopy = Object.assign({}, newVal);\n    },\n    dialog(newVal) {\n      this.internalDialog = newVal;\n    }\n  }\n};","map":{"version":3,"names":["moment","props","dialog","Boolean","dialogTitle","String","editedItem","Object","rules","statusOptions","Array","ordersList","editedIndex","Number","data","internalDialog","editedItemCopy","assign","menu2","counter","value","length","numIfNonEmpty","pattern","test","max20Characters","stgCheck","client_nameCheck","personPhoneCheck","methods","closeDialog","$emit","saveItem","JSON","parse","stringify","$nextTick","$refs","form","validate","dadd","isValid","format","index","order","console","error","watch","newVal"],"sources":["src/components/DialogEdit.vue"],"sourcesContent":["<template>\n    <v-dialog v-if=\"dialog\" v-model=\"internalDialog\" max-width=\"600px\">\n      <v-card>\n        <v-card-title>{{ dialogTitle }}</v-card-title>\n        <v-card-text>\n          <v-form ref=\"form\">\n            <v-text-field v-model=\"editedItemCopy.num\" :rules=\"[rules.counter, rules.numIfNonEmpty]\"\n              label=\"№ Заявки\" required></v-text-field>\n            <v-text-field v-model=\"editedItemCopy.stg\" :rules=\"[rules.stgCheck, rules.max20Characters]\"\n              label=\"Продукт\" required></v-text-field>\n            <v-row>\n              <v-col cols=\"12\" sm=\"6\" md=\"4\">\n                <v-menu v-model=\"menu2\" :close-on-content-click=\"false\" :nudge-right=\"40\"\n                  transition=\"scale-transition\" offset-y min-width=\"auto\">\n                  <template v-slot:activator=\"{ on, attrs }\">\n                    <v-text-field v-model=\"editedItemCopy.dadd\" label=\"Дата\" prepend-icon=\"mdi-calendar\"\n                      readonly v-bind=\"attrs\" v-on=\"on\"></v-text-field>\n                  </template>\n                  <v-date-picker v-model=\"editedItemCopy.dadd\" @input=\"menu2 = false\"></v-date-picker>\n                </v-menu>\n              </v-col>\n            </v-row>\n            <v-text-field v-model=\"editedItemCopy.client_name\" :rules=\"[rules.client_nameCheck]\" label=\"Клиент\"\n              required></v-text-field>\n            <v-row>\n              <v-col class=\"d-flex\" cols=\"12\" sm=\"6\">\n                <v-select v-model=\"editedItemCopy.state\" :items=\"statusOptions\" label=\"Статус\"></v-select>\n              </v-col>\n            </v-row>\n            <v-text-field v-model=\"editedItemCopy.person_phone\" :rules=\"[rules.personPhoneCheck]\"\n              label=\"Телефон\" required></v-text-field>\n          </v-form>\n        </v-card-text>\n        <v-card-actions>\n          <v-spacer></v-spacer>\n          <v-btn color=\"blue darken-1\" text @click=\"closeDialog\">Отмена</v-btn>\n          <v-btn color=\"blue darken-1\" text @click=\"saveItem\">Сохранить</v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n  </template>\n  \n  <script>\n  import moment from 'moment';\n  \n  export default {\n    props: {\n      dialog: Boolean,\n      dialogTitle: String,\n      editedItem: Object,\n      rules: Object,\n      statusOptions: Array,\n      ordersList: Array,\n      editedIndex: Number\n    },\n    data() {\n      return {\n        internalDialog: this.dialog,\n        editedItemCopy: Object.assign({}, this.editedItem),\n        menu2: false,\n        rules: {\n          counter: value => value.length <= 8 || 'Максимум 8 символов',\n          numIfNonEmpty: value => {\n            const pattern = /^[0-9]+$/;\n            return value === '' || pattern.test(value) || 'Недопустимый номер заявки. Используйте только цифры';\n          },\n          max20Characters: value => value.length <= 20 || 'Максимум 20 символов',\n          stgCheck: value => {\n            const pattern = /^[a-zA-Zа-яА-Я.'\"0-9\\s]+$/;\n            return value === '' || pattern.test(value) || 'Используйте цифры (0-9) или буквы (a-z, A-Z, а-я, А-Я). Максимум 20 символов.';\n          },\n          client_nameCheck: value => {\n            const pattern = /^[a-zA-Zа-яА-Я\\s.'\"0-9]+$/;\n            return value === '' || (value.length <= 30 && pattern.test(value)) || 'Используйте цифры (0-9) или буквы (a-z, A-Z, а-я, А-Я). Максимум 30 символов.';\n          },\n          personPhoneCheck: value => {\n            const pattern = /^[0-9]+$/;\n            return value === '' || (value.length === 11 && pattern.test(value)) || 'Недопустимый номер телефона. Должен содержать ровно 11 цифр.';\n          }\n        }\n      };\n    },\n    methods: {\n      closeDialog() {\n        this.internalDialog = false;\n        this.$emit('update:dialog', this.internalDialog);\n      },\n      saveItem() {\n        const editedItemCopy = JSON.parse(JSON.stringify(this.editedItemCopy));\n        this.$nextTick(() => {\n          if (this.$refs.form && typeof this.$refs.form.validate === 'function') {\n            if (this.$refs.form.validate()) {\n              if (!moment(editedItemCopy.dadd).isValid()) {\n                editedItemCopy.dadd = moment().format('YYYY-MM-DD HH:mm');\n              } else {\n                editedItemCopy.dadd = moment(editedItemCopy.dadd).format('YYYY-MM-DD HH:mm');\n              }\n              if (this.editedIndex > -1) {\n                this.$emit('update-order', { index: this.editedIndex, order: editedItemCopy });\n              } else {\n                this.$emit('add-order', editedItemCopy);\n              }\n              this.$emit('save');\n              this.closeDialog();\n            }\n          } else {\n            console.error('Ошибка: объект this.$refs.form не определен или метод validate не существует.');\n          }\n        });\n      }\n    },\n    watch: {\n      editedItem(newVal) {\n        this.editedItemCopy = Object.assign({}, newVal);\n      },\n      dialog(newVal) {\n        this.internalDialog = newVal;\n      }\n    }\n  };\n  </script>\n  "],"mappings":"AA2CA,OAAAA,MAAA;AAEA;EACAC,KAAA;IACAC,MAAA,EAAAC,OAAA;IACAC,WAAA,EAAAC,MAAA;IACAC,UAAA,EAAAC,MAAA;IACAC,KAAA,EAAAD,MAAA;IACAE,aAAA,EAAAC,KAAA;IACAC,UAAA,EAAAD,KAAA;IACAE,WAAA,EAAAC;EACA;EACAC,KAAA;IACA;MACAC,cAAA,OAAAb,MAAA;MACAc,cAAA,EAAAT,MAAA,CAAAU,MAAA,UAAAX,UAAA;MACAY,KAAA;MACAV,KAAA;QACAW,OAAA,EAAAC,KAAA,IAAAA,KAAA,CAAAC,MAAA;QACAC,aAAA,EAAAF,KAAA;UACA,MAAAG,OAAA;UACA,OAAAH,KAAA,WAAAG,OAAA,CAAAC,IAAA,CAAAJ,KAAA;QACA;QACAK,eAAA,EAAAL,KAAA,IAAAA,KAAA,CAAAC,MAAA;QACAK,QAAA,EAAAN,KAAA;UACA,MAAAG,OAAA;UACA,OAAAH,KAAA,WAAAG,OAAA,CAAAC,IAAA,CAAAJ,KAAA;QACA;QACAO,gBAAA,EAAAP,KAAA;UACA,MAAAG,OAAA;UACA,OAAAH,KAAA,WAAAA,KAAA,CAAAC,MAAA,UAAAE,OAAA,CAAAC,IAAA,CAAAJ,KAAA;QACA;QACAQ,gBAAA,EAAAR,KAAA;UACA,MAAAG,OAAA;UACA,OAAAH,KAAA,WAAAA,KAAA,CAAAC,MAAA,WAAAE,OAAA,CAAAC,IAAA,CAAAJ,KAAA;QACA;MACA;IACA;EACA;EACAS,OAAA;IACAC,YAAA;MACA,KAAAf,cAAA;MACA,KAAAgB,KAAA,uBAAAhB,cAAA;IACA;IACAiB,SAAA;MACA,MAAAhB,cAAA,GAAAiB,IAAA,CAAAC,KAAA,CAAAD,IAAA,CAAAE,SAAA,MAAAnB,cAAA;MACA,KAAAoB,SAAA;QACA,SAAAC,KAAA,CAAAC,IAAA,gBAAAD,KAAA,CAAAC,IAAA,CAAAC,QAAA;UACA,SAAAF,KAAA,CAAAC,IAAA,CAAAC,QAAA;YACA,KAAAvC,MAAA,CAAAgB,cAAA,CAAAwB,IAAA,EAAAC,OAAA;cACAzB,cAAA,CAAAwB,IAAA,GAAAxC,MAAA,GAAA0C,MAAA;YACA;cACA1B,cAAA,CAAAwB,IAAA,GAAAxC,MAAA,CAAAgB,cAAA,CAAAwB,IAAA,EAAAE,MAAA;YACA;YACA,SAAA9B,WAAA;cACA,KAAAmB,KAAA;gBAAAY,KAAA,OAAA/B,WAAA;gBAAAgC,KAAA,EAAA5B;cAAA;YACA;cACA,KAAAe,KAAA,cAAAf,cAAA;YACA;YACA,KAAAe,KAAA;YACA,KAAAD,WAAA;UACA;QACA;UACAe,OAAA,CAAAC,KAAA;QACA;MACA;IACA;EACA;EACAC,KAAA;IACAzC,WAAA0C,MAAA;MACA,KAAAhC,cAAA,GAAAT,MAAA,CAAAU,MAAA,KAAA+B,MAAA;IACA;IACA9C,OAAA8C,MAAA;MACA,KAAAjC,cAAA,GAAAiC,MAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}