{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport MyApplications from '@/components/MyApplications.vue';\nimport MyAccounts from '@/components/MyAccounts.vue';\nimport OrderDetails from '@/components/OrderDetails.vue';\nexport default {\n  data() {\n    return {\n      activeTab: 0,\n      tabs: [{\n        label: 'Заявки',\n        component: MyApplications,\n        path: '/application'\n      }, {\n        label: 'Счета',\n        component: MyAccounts,\n        path: '/accounts'\n      }]\n    };\n  },\n  methods: {\n    navigateToOrder(item) {\n      const existingTabIndex = this.tabs.findIndex(tab => tab.label.includes(item.num));\n      if (existingTabIndex !== -1) {\n        this.activeTab = existingTabIndex;\n      } else {\n        const newTabLabel = 'Детали заявки ' + item.num;\n        const newTabKey = newTabLabel + '-' + item.orderId; // Adding orderId to ensure uniqueness\n        this.tabs.push({\n          label: newTabLabel,\n          component: OrderDetails,\n          path: '/application/' + item.orderId,\n          key: newTabKey\n        });\n        this.activeTab = this.tabs.length - 1;\n        if (this.$route.path !== '/application') {\n          this.$router.push({\n            path: '/application',\n            replace: true\n          });\n        }\n      }\n    }\n  },\n  created() {\n    const selectedTab = this.tabs.find(tab => tab.path === this.$route.path);\n    if (selectedTab) {\n      this.activeTab = this.tabs.indexOf(selectedTab);\n    }\n  },\n  watch: {\n    activeTab(newVal) {\n      const selectedTab = this.tabs[newVal];\n      if (selectedTab && selectedTab.path) {\n        this.$router.push({\n          path: selectedTab.path\n        });\n      }\n    },\n    '$route'() {\n      const selectedTab = this.tabs.find(tab => tab.path === this.$route.path);\n      if (selectedTab) {\n        this.activeTab = this.tabs.indexOf(selectedTab);\n      }\n    }\n  }\n};","map":{"version":3,"names":["MyApplications","MyAccounts","OrderDetails","data","activeTab","tabs","label","component","path","methods","navigateToOrder","item","existingTabIndex","findIndex","tab","includes","num","newTabLabel","newTabKey","orderId","push","key","length","$route","$router","replace","created","selectedTab","find","indexOf","watch","newVal"],"sources":["src/components/AppTabs.vue"],"sourcesContent":["<template>\n  <v-app>\n    <div class=\"mx-16\">\n      <v-tabs v-model=\"activeTab\" background-color=\"transparent\" color=\"basil\" grow>\n        <v-tab v-for=\"tab in tabs\" :key=\"tab.label\">{{ tab.label }}</v-tab>\n      </v-tabs>\n\n      <v-tabs-items v-model=\"activeTab\">\n        <v-tab-item v-for=\"(tab, index) in tabs\" :key=\"index\">\n          <component :is=\"tab.component\" :data=\"tab.data\" @select-order=\"navigateToOrder\" />\n        </v-tab-item>\n      </v-tabs-items>\n    </div>\n  </v-app>\n</template>\n\n<script>\nimport MyApplications from '@/components/MyApplications.vue';\nimport MyAccounts from '@/components/MyAccounts.vue';\nimport OrderDetails from '@/components/OrderDetails.vue';\n\n\nexport default {\n  data() {\n    return {\n      activeTab: 0,\n      tabs: [\n        { label: 'Заявки', component: MyApplications, path: '/application' },\n        { label: 'Счета', component: MyAccounts, path: '/accounts' }\n      ],\n    };\n  },\n  methods: {\n    navigateToOrder(item) {\n  const existingTabIndex = this.tabs.findIndex(tab => tab.label.includes(item.num));\n  if (existingTabIndex !== -1) {\n    this.activeTab = existingTabIndex;\n  } else {\n    const newTabLabel = 'Детали заявки ' + item.num;\n    const newTabKey = newTabLabel + '-' + item.orderId; // Adding orderId to ensure uniqueness\n    this.tabs.push({ label: newTabLabel, component: OrderDetails, path: '/application/' + item.orderId, key: newTabKey });\n    this.activeTab = this.tabs.length - 1;\n    if (this.$route.path !== '/application') {\n      this.$router.push({ path: '/application', replace: true });\n    }  }\n}\n\n  },\n  created() {\n    const selectedTab = this.tabs.find(tab => tab.path === this.$route.path);\n    if (selectedTab) {\n      this.activeTab = this.tabs.indexOf(selectedTab);\n    }\n  },\n  watch: {\n    activeTab(newVal) {\n      const selectedTab = this.tabs[newVal];\n      if (selectedTab && selectedTab.path) {\n        this.$router.push({ path: selectedTab.path });\n      }\n    },\n    '$route'() {\n      const selectedTab = this.tabs.find(tab => tab.path === this.$route.path);\n      if (selectedTab) {\n        this.activeTab = this.tabs.indexOf(selectedTab);\n      }\n    }\n  }\n};\n</script>\n\n\n"],"mappings":";AAiBA,OAAAA,cAAA;AACA,OAAAC,UAAA;AACA,OAAAC,YAAA;AAGA;EACAC,KAAA;IACA;MACAC,SAAA;MACAC,IAAA,GACA;QAAAC,KAAA;QAAAC,SAAA,EAAAP,cAAA;QAAAQ,IAAA;MAAA,GACA;QAAAF,KAAA;QAAAC,SAAA,EAAAN,UAAA;QAAAO,IAAA;MAAA;IAEA;EACA;EACAC,OAAA;IACAC,gBAAAC,IAAA;MACA,MAAAC,gBAAA,QAAAP,IAAA,CAAAQ,SAAA,CAAAC,GAAA,IAAAA,GAAA,CAAAR,KAAA,CAAAS,QAAA,CAAAJ,IAAA,CAAAK,GAAA;MACA,IAAAJ,gBAAA;QACA,KAAAR,SAAA,GAAAQ,gBAAA;MACA;QACA,MAAAK,WAAA,sBAAAN,IAAA,CAAAK,GAAA;QACA,MAAAE,SAAA,GAAAD,WAAA,SAAAN,IAAA,CAAAQ,OAAA;QACA,KAAAd,IAAA,CAAAe,IAAA;UAAAd,KAAA,EAAAW,WAAA;UAAAV,SAAA,EAAAL,YAAA;UAAAM,IAAA,oBAAAG,IAAA,CAAAQ,OAAA;UAAAE,GAAA,EAAAH;QAAA;QACA,KAAAd,SAAA,QAAAC,IAAA,CAAAiB,MAAA;QACA,SAAAC,MAAA,CAAAf,IAAA;UACA,KAAAgB,OAAA,CAAAJ,IAAA;YAAAZ,IAAA;YAAAiB,OAAA;UAAA;QACA;MAAA;IACA;EAEA;EACAC,QAAA;IACA,MAAAC,WAAA,QAAAtB,IAAA,CAAAuB,IAAA,CAAAd,GAAA,IAAAA,GAAA,CAAAN,IAAA,UAAAe,MAAA,CAAAf,IAAA;IACA,IAAAmB,WAAA;MACA,KAAAvB,SAAA,QAAAC,IAAA,CAAAwB,OAAA,CAAAF,WAAA;IACA;EACA;EACAG,KAAA;IACA1B,UAAA2B,MAAA;MACA,MAAAJ,WAAA,QAAAtB,IAAA,CAAA0B,MAAA;MACA,IAAAJ,WAAA,IAAAA,WAAA,CAAAnB,IAAA;QACA,KAAAgB,OAAA,CAAAJ,IAAA;UAAAZ,IAAA,EAAAmB,WAAA,CAAAnB;QAAA;MACA;IACA;IACA,QAAAe,CAAA;MACA,MAAAI,WAAA,QAAAtB,IAAA,CAAAuB,IAAA,CAAAd,GAAA,IAAAA,GAAA,CAAAN,IAAA,UAAAe,MAAA,CAAAf,IAAA;MACA,IAAAmB,WAAA;QACA,KAAAvB,SAAA,QAAAC,IAAA,CAAAwB,OAAA,CAAAF,WAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}