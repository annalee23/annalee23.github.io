{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport axios from 'axios';\nimport moment from 'moment';\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    ordersList: [],\n    meetingsList: [],\n    currentOrder: null\n  },\n  mutations: {\n    setOrdersList(state, orders) {\n      state.ordersList = orders.map(order => ({\n        ...order,\n        dadd: moment(order.dadd).isValid() ? moment(order.dadd).format('YYYY-MM-DD HH:mm') : 'Invalid date'\n      }));\n    },\n    addNewOrder(state, order) {\n      state.ordersList.push(order);\n    },\n    updateOrder(state, order) {\n      const index = state.ordersList.findIndex(o => o.id === order.id);\n      if (index !== -1) {\n        Vue.set(state.ordersList, index, order);\n      }\n    },\n    deleteOrder(state, orderId) {\n      state.ordersList = state.ordersList.filter(o => o.id !== orderId);\n    },\n    setMeetingsList(state, meetings) {\n      state.meetingsList = meetings;\n    },\n    setCurrentOrder(state, order) {\n      state.currentOrder = order;\n    }\n  },\n  actions: {\n    fetchOrdersList({\n      commit\n    }) {\n      axios.get('https://my-json-server.typicode.com/plushevy/demo/list').then(response => {\n        commit('setOrdersList', response.data);\n      }).catch(error => {\n        console.error('Ошибка при загрузке списка заявок:', error);\n        throw error;\n      });\n    },\n    fetchMeetingsList({\n      commit\n    }) {\n      axios.get('https://my-json-server.typicode.com/plushevy/demo/meetings').then(response => {\n        commit('setMeetingsList', response.data);\n      }).catch(error => {\n        console.error('Ошибка при загрузке списка встреч:', error);\n        throw error;\n      });\n    },\n    fetchOrderDetails({\n      commit\n    }, orderId) {\n      axios.get(`https://my-json-server.typicode.com/plushevy/demo/orders/${orderId}`).then(response => {\n        commit('setCurrentOrder', response.data);\n      }).catch(error => {\n        console.error('Ошибка при загрузке данных заявки:', error);\n        throw error;\n      });\n    },\n    addNewOrder({\n      commit\n    }, order) {\n      commit('addNewOrder', order);\n    },\n    updateOrder({\n      commit\n    }, order) {\n      commit('updateOrder', order);\n    },\n    deleteOrder({\n      commit\n    }, orderId) {\n      commit('deleteOrder', orderId);\n    }\n  }\n});","map":{"version":3,"names":["Vue","Vuex","axios","moment","use","Store","state","ordersList","meetingsList","currentOrder","mutations","setOrdersList","orders","map","order","dadd","isValid","format","addNewOrder","push","updateOrder","index","findIndex","o","id","set","deleteOrder","orderId","filter","setMeetingsList","meetings","setCurrentOrder","actions","fetchOrdersList","commit","get","then","response","data","catch","error","console","fetchMeetingsList","fetchOrderDetails"],"sources":["/Users/annalee/vue2/testTask/test-app/vue2-sample-project/src/store/store.js"],"sourcesContent":["import Vue from 'vue';\nimport Vuex from 'vuex';\nimport axios from 'axios';\nimport moment from 'moment';\n\nVue.use(Vuex);\n\nexport default new Vuex.Store({\n  state: {\n    ordersList: [],\n    meetingsList: [],\n    currentOrder: null\n  },\n  mutations: {\n    setOrdersList(state, orders) {\n      state.ordersList = orders.map(order => ({\n        ...order,\n        dadd: moment(order.dadd).isValid() ? moment(order.dadd).format('YYYY-MM-DD HH:mm') : 'Invalid date'\n      }));\n    },\n    addNewOrder(state, order) {\n      state.ordersList.push(order);\n    },\n    updateOrder(state, order) {\n      const index = state.ordersList.findIndex(o => o.id === order.id);\n      if (index !== -1) {\n        Vue.set(state.ordersList, index, order);\n      }\n    },\n    deleteOrder(state, orderId) {\n      state.ordersList = state.ordersList.filter(o => o.id !== orderId);\n    },\n    setMeetingsList(state, meetings) {\n      state.meetingsList = meetings;\n    },\n    setCurrentOrder(state, order) {\n      state.currentOrder = order;\n    }\n  },\n  actions: {\n    fetchOrdersList({ commit }) {\n      axios.get('https://my-json-server.typicode.com/plushevy/demo/list')\n        .then(response => {\n          commit('setOrdersList', response.data);\n        })\n        .catch(error => {\n          console.error('Ошибка при загрузке списка заявок:', error);\n          throw error;\n        });\n    },\n    fetchMeetingsList({ commit }) {\n      axios.get('https://my-json-server.typicode.com/plushevy/demo/meetings')\n        .then(response => {\n          commit('setMeetingsList', response.data);\n        })\n        .catch(error => {\n          console.error('Ошибка при загрузке списка встреч:', error);\n          throw error;\n        });\n    },\n    fetchOrderDetails({ commit }, orderId) {\n      axios.get(`https://my-json-server.typicode.com/plushevy/demo/orders/${orderId}`)\n        .then(response => {\n          commit('setCurrentOrder', response.data);\n        })\n        .catch(error => {\n          console.error('Ошибка при загрузке данных заявки:', error);\n          throw error; \n        });\n    },\n    addNewOrder({ commit }, order) {\n      commit('addNewOrder', order);\n    },\n    updateOrder({ commit }, order) {\n      commit('updateOrder', order);\n    },\n    deleteOrder({ commit }, orderId) {\n      commit('deleteOrder', orderId);\n    }\n  }\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}