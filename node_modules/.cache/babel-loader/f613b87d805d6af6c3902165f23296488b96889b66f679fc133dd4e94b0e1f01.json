{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { mapState, mapActions } from 'vuex';\n\n//import MyApplications from '@/components/MyApplications.vue';\n//import MyAccounts from '@/components/MyAccounts.vue';\n//import OrderDetails from '@/components/OrderDetails.vue';\n\nexport default {\n  data() {\n    return {\n      activeTab: 0 // Инициализируем переменную activeTab\n    };\n  },\n  computed: {\n    ...mapState(['tabs'])\n  },\n  methods: {\n    ...mapActions(['updateTabs']),\n    navigateToOrder(orderId) {\n      const existingTabIndex = this.tabs.findIndex(tab => tab.label.includes(orderId));\n      if (existingTabIndex !== -1) {\n        this.activeTab = existingTabIndex;\n      } else {\n        const newTab = {\n          label: 'Детали заявки ' + orderId,\n          component: 'OrderDetails',\n          path: '/application/' + orderId\n        };\n        const newTabs = [...this.tabs, newTab];\n        this.updateTabs(newTabs);\n        this.activeTab = newTabs.length - 1;\n      }\n    }\n  },\n  watch: {\n    activeTab(newVal) {\n      const selectedTab = this.tabs[newVal];\n      if (selectedTab && selectedTab.path) {\n        this.$router.push({\n          path: selectedTab.path\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["mapState","mapActions","data","activeTab","computed","methods","navigateToOrder","orderId","existingTabIndex","tabs","findIndex","tab","label","includes","newTab","component","path","newTabs","updateTabs","length","watch","newVal","selectedTab","$router","push"],"sources":["src/components/AppTabs.vue"],"sourcesContent":["<template>\n  <v-app>\n    <div class=\"mx-16\">\n      <v-tabs v-model=\"activeTab\" background-color=\"transparent\" color=\"basil\" grow>\n        <v-tab v-for=\"tab in tabs\" :key=\"tab.label\">{{ tab.label }}</v-tab>\n      </v-tabs>\n\n      <v-tabs-items v-model=\"activeTab\">\n        <v-tab-item v-for=\"(tab, index) in tabs\" :key=\"index\">\n          <component :is=\"tab.component\" :data=\"tab.data\" @select-order=\"navigateToOrder\" />\n        </v-tab-item>\n      </v-tabs-items>\n    </div>\n  </v-app>\n</template>\n\n<script>\nimport { mapState, mapActions } from 'vuex';\n\n//import MyApplications from '@/components/MyApplications.vue';\n//import MyAccounts from '@/components/MyAccounts.vue';\n//import OrderDetails from '@/components/OrderDetails.vue';\n\nexport default {\n  data() {\n    return {\n      activeTab: 0 // Инициализируем переменную activeTab\n    };\n  },\n  computed: {\n    ...mapState(['tabs'])\n  },\n  methods: {\n    ...mapActions(['updateTabs']), \n    navigateToOrder(orderId) {\n      const existingTabIndex = this.tabs.findIndex(tab => tab.label.includes(orderId));\n      if (existingTabIndex !== -1) {\n        this.activeTab = existingTabIndex;\n      } else {\n        const newTab = { label: 'Детали заявки ' + orderId, component: 'OrderDetails', path: '/application/' + orderId };\n        const newTabs = [...this.tabs, newTab];\n        this.updateTabs(newTabs); \n        this.activeTab = newTabs.length - 1;\n      }\n    }\n  },\n  watch: {\n    activeTab(newVal) {\n      const selectedTab = this.tabs[newVal];\n      if (selectedTab && selectedTab.path) {\n        this.$router.push({ path: selectedTab.path });\n      }\n    }\n  }\n};\n</script>\n\n\n"],"mappings":";AAiBA,SAAAA,QAAA,EAAAC,UAAA;;AAEA;AACA;AACA;;AAEA;EACAC,KAAA;IACA;MACAC,SAAA;IACA;EACA;EACAC,QAAA;IACA,GAAAJ,QAAA;EACA;EACAK,OAAA;IACA,GAAAJ,UAAA;IACAK,gBAAAC,OAAA;MACA,MAAAC,gBAAA,QAAAC,IAAA,CAAAC,SAAA,CAAAC,GAAA,IAAAA,GAAA,CAAAC,KAAA,CAAAC,QAAA,CAAAN,OAAA;MACA,IAAAC,gBAAA;QACA,KAAAL,SAAA,GAAAK,gBAAA;MACA;QACA,MAAAM,MAAA;UAAAF,KAAA,qBAAAL,OAAA;UAAAQ,SAAA;UAAAC,IAAA,oBAAAT;QAAA;QACA,MAAAU,OAAA,YAAAR,IAAA,EAAAK,MAAA;QACA,KAAAI,UAAA,CAAAD,OAAA;QACA,KAAAd,SAAA,GAAAc,OAAA,CAAAE,MAAA;MACA;IACA;EACA;EACAC,KAAA;IACAjB,UAAAkB,MAAA;MACA,MAAAC,WAAA,QAAAb,IAAA,CAAAY,MAAA;MACA,IAAAC,WAAA,IAAAA,WAAA,CAAAN,IAAA;QACA,KAAAO,OAAA,CAAAC,IAAA;UAAAR,IAAA,EAAAM,WAAA,CAAAN;QAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}